{"version":3,"sources":["components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/Tags.tsx","hooks/useStake.ts","config/index.ts","components/layout/Flex.tsx","hooks/useApprove.ts","hooks/useUnstake.ts","hooks/useBlock.ts","views/Pools/components/Card.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Coming.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","TranslateString","useI18n","toLocaleString","onClick","BigNumber","times","toString","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","useSousStake","sousId","isUsingBnb","dispatch","useDispatch","useWallet","account","masterChefContract","useMasterchef","sousChefContract","useSousChef","handleStake","useCallback","amount","a","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","pid","txHash","fetchFarmUserDataAsync","console","info","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","useApprove","lpContract","onApprove","approve","tx","useSousApprove","updateUserAllowance","SYRUPIDS","useSousUnstake","isOldSyrup","includes","onUnstake","unstake","sousEmegencyUnstake","sousUnstake","updateUserPendingReward","useUnstake","useBlock","BlockContext","Card","card","background","isFinished","isActive","CardTitle","Balance","text","Label","textSubtle","DetailPlaceholder","Value","Footer","isDark","Coming","style","padding","role","aria-label","src","width","height","alt","as","href","external","fullWidth","mb","flex","StyledLabel","StyledText","Text","isDisabled","color","textDisabled","fontSize","decimals","unit","previousValue","useRef","useEffect","current","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","id","Title","ActionLink","OldSyrupTitle","hasBalance","target","StyledButton","button","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","PoolCategory","BINANCE","CORE","COMMUNITY","StyledFooter","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","marginBottom","getBalanceNumber","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","image","stakingTokenName","stakingTokenAddress","harvest","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","useERC20","block","onReward","useSousHarvest","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","Math","QuoteToken","SYRUP","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","pow","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","HarvestButton","UnlockButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","Hero","Farm","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","find","f","tokenSymbol","stakingTokenFarm","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","BUSD","priceToBnb","quoteTokenSymbol","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","Divider","Flex","exact","orderBy"],"mappings":"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","file":"static/js/9.118d578e.chunk.js","sourcesContent":["import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.input};\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  display: flex;\r\n  height: 72px;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledMaxText>\r\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\r\n      </StyledMaxText>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'Max')}\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n      {\r\n        depositFeeBP > 0 ?\r\n          <StyledMaxText>\r\n            {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\r\n          </StyledMaxText>\r\n          :\r\n          null\r\n      }\r\n\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TokenInput\r\n","import React from 'react'\r\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\r\n\r\nconst NoFeeTag = () => (\r\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\r\n    No Fees\r\n  </Tag>\r\n)\r\n\r\nconst RiskTag = ({ risk }) => (\r\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\r\n    Risk {risk}\r\n  </Tag>\r\n)\r\n\r\nconst CoreTag = () => (\r\n  <Tag variant='secondary' outline startIcon={<VerifiedIcon />}>\r\n    Core\r\n  </Tag>\r\n)\r\n\r\nconst CommunityTag = () => (\r\n  <Tag variant='textSubtle' outline startIcon={<CommunityIcon />}>\r\n    Community\r\n  </Tag>\r\n)\r\n\r\nconst BinanceTag = () => (\r\n  <Tag variant='binance' outline startIcon={<BinanceIcon />}>\r\n    Binance\r\n  </Tag>\r\n)\r\n\r\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useStake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, account)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, account)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","import BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(1)\r\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\r\nexport const BSC_BLOCK_TIME = 3\r\n\r\nexport const CAKE_POOL_PID = 1\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  fetchFarmUserDataAsync,\r\n  updateUserStakedBalance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n} from 'state/actions'\r\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\r\n\r\nexport const useSousUnstake = (sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const isOldSyrup = SYRUPIDS.includes(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (isOldSyrup) {\r\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import { useContext } from 'react'\r\nimport { BlockContext } from 'contexts/BlockContext'\r\n\r\nconst useBlock = () => {\r\n  const block: number = useContext(BlockContext)\r\n  return block\r\n}\r\n\r\nexport default useBlock\r\n","import styled from 'styled-components'\r\n\r\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\r\n  background: ${(props) => props.theme.card.background};\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.2), 0px 1px 1px rgba(25, 19, 38, 0.1);\r\n  border-radius: 32px;\r\n  display: flex;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n  box-shadow: ${({ isActive }) =>\r\n    isActive\r\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\r\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.2), 0px 1px 1px rgba(25, 19, 38, 0.1)'};\r\n  flex-direction: column;\r\n  position: relative;\r\n`\r\n\r\nexport default Card\r\n","import styled from 'styled-components'\r\n\r\ninterface StyledTitleProps {\r\n  isFinished?: boolean\r\n}\r\n\r\nconst CardTitle = styled.div<StyledTitleProps>`\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 1.1;\r\n  margin-bottom: 14px;\r\n`\r\n\r\nexport default CardTitle\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Image, Button } from '@pancakeswap-libs/uikit'\r\nimport { CommunityTag } from 'components/Tags'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Card from './Card'\r\nimport CardTitle from './CardTitle'\r\n\r\nconst Balance = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 40px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst DetailPlaceholder = styled.div`\r\n  display: flex;\r\n  font-size: 14px;\r\n`\r\nconst Value = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 14px;\r\n`\r\n\r\nconst Footer = styled.div`\r\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#ad8045' : '#E9EAEB')};\r\n  padding: 24px;\r\n`\r\nconst Coming: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card>\r\n      <div style={{ padding: '24px' }}>\r\n        <CardTitle>\r\n          {TranslateString(414, 'Your Project?')}{' '}\r\n          <span role=\"img\" aria-label=\"eyes\">\r\n            👀\r\n          </span>\r\n        </CardTitle>\r\n        <Image src=\"https://github.com/octahedron22/img/raw/main/egg/wikiquestion.png\" width={100} height={76} alt=\"Your project here\" />\r\n        <Balance>???</Balance>\r\n        <Label>{TranslateString(416, 'Apply for a pool with your token')}</Label>\r\n        <Button\r\n          variant=\"secondary\"\r\n          as=\"a\"\r\n          href=\"https://docs.google.com/forms/d/1iN8mqgNDhUeqXt9ffKwpeeA6mgVEM6MsxhKMpkFhutI\"\r\n          external\r\n          fullWidth\r\n          mb=\"16px\"\r\n        >\r\n          {TranslateString(0, '--> Apply Now -->')}\r\n        </Button>\r\n        <DetailPlaceholder>\r\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\r\n          <Value>???</Value>\r\n        </DetailPlaceholder>\r\n        <DetailPlaceholder>\r\n          <div style={{ flex: 1 }}>\r\n            <span role=\"img\" aria-label=\"syrup\">\r\n              {' '}\r\n            </span>\r\n            {TranslateString(384, 'Your Stake')}:\r\n          </div>\r\n          <Value>??? WIKI or sWIKI</Value>\r\n        </DetailPlaceholder>\r\n      </div>\r\n      <Footer>\r\n        <CommunityTag />\r\n      </Footer>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Coming\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface LabelProps {\r\n  text?: string\r\n  isFinished?: boolean\r\n}\r\n\r\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\r\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\r\n)\r\n\r\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\r\n  font-size: 14px;\r\n`\r\n\r\nexport default Label\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface TextProps {\r\n  isDisabled?: boolean\r\n  fontSize?: string\r\n  color?: string\r\n}\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value?: number\r\n  decimals?: number\r\n  unit?: string\r\n}\r\n\r\nconst StyledText = styled(Text)<TextProps>`\r\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\r\n`\r\n\r\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n\r\n  return (\r\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\r\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\r\n      {value && unit && <span>{unit}</span>}\r\n    </StyledText>\r\n  )\r\n}\r\n\r\nBalance.defaultProps = {\r\n  fontSize: '32px',\r\n  isDisabled: false,\r\n  color: 'text',\r\n  decimals: 4,\r\n}\r\n\r\nexport default Balance\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from '../../../components/TokenInput'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          fullWidth\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from '../../../components/TokenInput'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport React, { useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport Balance from 'components/Balance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  earnings: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(earnings)\r\n  }, [earnings])\r\n\r\n  return (\r\n    <Modal\r\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <BalanceRow>\r\n        <Balance value={Number(fullBalance)} />\r\n      </BalanceRow>\r\n      <ModalActions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"compound-cake\"\r\n          fullWidth\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(fullBalance)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CompoundModal\r\n\r\nconst BalanceRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport CardTitle from './CardTitle'\r\n\r\ninterface Props {\r\n  hasBalance?: boolean\r\n}\r\n\r\nconst Title = styled.div`\r\n  color: #b07000;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n`\r\n\r\nconst ActionLink = styled.a`\r\n  color: #b07000;\r\n  font-size: 14px;\r\n`\r\n\r\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\r\n  if (hasBalance) {\r\n    return (\r\n      <div>\r\n        <Title>Action Required</Title>\r\n        <ActionLink\r\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\r\n          target=\"_blank\"\r\n        >\r\n          What do I need to do?\r\n        </ActionLink>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CardTitle isFinished>FINISHED</CardTitle>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OldSyrupTitle\r\n","import React, { useContext, useMemo } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactNode\r\n  disabled?: boolean\r\n  href?: string\r\n  onClick?: () => void\r\n  size?: 'sm' | 'md' | 'lg'\r\n  text?: string\r\n  to?: string\r\n  variant?: 'default' | 'secondary' | 'tertiary'\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\r\n  const { colors, spacing } = useContext(ThemeContext)\r\n  const buttonColor = colors.background\r\n\r\n  let boxShadow: string\r\n  let buttonSize: number\r\n  let buttonPadding: number\r\n  let fontSize: number\r\n  switch (size) {\r\n    case 'sm':\r\n      buttonPadding = spacing[3]\r\n      buttonSize = 36\r\n      fontSize = 14\r\n      break\r\n    case 'lg':\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 72\r\n      fontSize = 16\r\n      break\r\n    case 'md':\r\n    default:\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 56\r\n      fontSize = 16\r\n  }\r\n\r\n  const ButtonChild = useMemo(() => {\r\n    if (to) {\r\n      return <StyledLink to={to}>{text}</StyledLink>\r\n    }\r\n    if (href) {\r\n      return (\r\n        <StyledExternalLink href={href} target=\"__blank\">\r\n          {text}\r\n        </StyledExternalLink>\r\n      )\r\n    }\r\n    return text\r\n  }, [href, text, to])\r\n\r\n  return (\r\n    <StyledButton\r\n      boxShadow={boxShadow}\r\n      color={buttonColor}\r\n      disabled={disabled}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      padding={buttonPadding}\r\n      size={buttonSize}\r\n    >\r\n      {children}\r\n      {ButtonChild}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\ninterface StyledButtonProps {\r\n  boxShadow: string\r\n  color: string\r\n  disabled?: boolean\r\n  fontSize: number\r\n  padding: number\r\n  size: number\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\r\n  border: 0;\r\n  border-radius: 12px;\r\n  color: ${(props) => (!props.disabled ? `#e59202` : `#acaaaf`)};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-size: ${(props) => props.fontSize}px;\r\n  font-weight: 700;\r\n  height: ${(props) => props.size}px;\r\n  justify-content: center;\r\n  outline: none;\r\n  padding-left: ${(props) => props.padding}px;\r\n  padding-right: ${(props) => props.padding}px;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  width: 100%;\r\n  border: 2px solid ${(props) => (!props.disabled ? `#e58302` : `#eee`)};\r\n  width: 100px;\r\n  height: 30px;\r\n  font-size: 14px;\r\n  padding: 0px;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nconst StyledExternalLink = styled.a`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nexport default Button\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { ChevronDown, ChevronUp } from 'react-feather'\r\nimport Balance from 'components/Balance'\r\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\r\nimport { PoolCategory } from 'config/constants/types'\r\n\r\nconst tags = {\r\n  [PoolCategory.BINANCE]: BinanceTag,\r\n  [PoolCategory.CORE]: CoreTag,\r\n  [PoolCategory.COMMUNITY]: CommunityTag,\r\n}\r\n\r\ninterface Props {\r\n  projectLink: string\r\n  totalStaked: BigNumber\r\n  blocksRemaining: number\r\n  isFinished: boolean\r\n  blocksUntilStart: number\r\n  poolCategory: PoolCategory\r\n}\r\n\r\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\r\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#ad8045' : '#E9EAEB')};\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\r\n  padding: 24px;\r\n`\r\n\r\nconst StyledDetailsButton = styled.button`\r\n  align-items: center;\r\n  background-color: transparent;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  height: 32px;\r\n  justify-content: center;\r\n  outline: 0;\r\n  padding: 0;\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  & > svg {\r\n    margin-left: 4px;\r\n  }\r\n`\r\n\r\nconst Details = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst FlexFull = styled.div`\r\n  flex: 1;\r\n`\r\nconst Label = styled.div`\r\n  font-size: 14px;\r\n`\r\nconst TokenLink = styled.a`\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  color: #e59202;\r\n`\r\n\r\nconst CardFooter: React.FC<Props> = ({\r\n  projectLink,\r\n  totalStaked,\r\n  blocksRemaining,\r\n  isFinished,\r\n  blocksUntilStart,\r\n  poolCategory,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const Icon = isOpen ? ChevronUp : ChevronDown\r\n\r\n  const handleClick = () => setIsOpen(!isOpen)\r\n  const Tag = tags[poolCategory]\r\n\r\n  return (\r\n    <StyledFooter isFinished={isFinished}>\r\n      <Row>\r\n        <FlexFull>\r\n          <Tag />\r\n        </FlexFull>\r\n        <StyledDetailsButton onClick={handleClick}>\r\n          {isOpen ? 'Hide' : 'Details'} <Icon />\r\n        </StyledDetailsButton>\r\n      </Row>\r\n      {isOpen && (\r\n        <Details>\r\n          <Row style={{ marginBottom: '4px' }}>\r\n            <FlexFull>\r\n              <Label>\r\n                <span role=\"img\" aria-label=\"syrup\">\r\n                  🥞{' '}\r\n                </span>\r\n                {TranslateString(408, 'Total')}\r\n              </Label>\r\n            </FlexFull>\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\r\n          </Row>\r\n          {blocksUntilStart > 0 && (\r\n            <Row>\r\n              <FlexFull>\r\n                <Label>{TranslateString(410, 'Start')}:</Label>\r\n              </FlexFull>\r\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\r\n            </Row>\r\n          )}\r\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\r\n            <Row>\r\n              <FlexFull>\r\n                <Label>{TranslateString(410, 'End')}:</Label>\r\n              </FlexFull>\r\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\r\n            </Row>\r\n          )}\r\n          <TokenLink href={projectLink} target=\"_blank\">\r\n            {TranslateString(412, 'View project site')}\r\n          </TokenLink>\r\n        </Details>\r\n      )}\r\n    </StyledFooter>\r\n  )\r\n}\r\n\r\nexport default React.memo(CardFooter)\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Label from 'components/Label'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { useSousApprove } from 'hooks/useApprove'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useSousStake } from 'hooks/useStake'\r\nimport { useSousUnstake } from 'hooks/useUnstake'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useSousHarvest } from 'hooks/useHarvest'\r\nimport Balance from 'components/Balance'\r\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\r\nimport { Pool } from 'state/types'\r\nimport DepositModal from './DepositModal'\r\nimport WithdrawModal from './WithdrawModal'\r\nimport CompoundModal from './CompoundModal'\r\nimport CardTitle from './CardTitle'\r\nimport Card from './Card'\r\nimport OldSyrupTitle from './OldSyrupTitle'\r\nimport HarvestButton from './HarvestButton'\r\nimport CardFooter from './CardFooter'\r\n\r\ninterface PoolWithApy extends Pool {\r\n  apy: BigNumber\r\n}\r\n\r\ninterface HarvestProps {\r\n  pool: PoolWithApy\r\n}\r\n\r\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\r\n  const {\r\n    sousId,\r\n    image,\r\n    tokenName,\r\n    stakingTokenName,\r\n    stakingTokenAddress,\r\n    projectLink,\r\n    harvest,\r\n    apy,\r\n    tokenDecimals,\r\n    poolCategory,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    isFinished,\r\n    userData,\r\n    stakingLimit,\r\n  } = pool\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const TranslateString = useI18n()\r\n  const stakingTokenContract = useERC20(stakingTokenAddress)\r\n  const { account } = useWallet()\r\n  const block = useBlock()\r\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\r\n  const { onStake } = useSousStake(sousId, isBnbPool)\r\n  const { onUnstake } = useSousUnstake(sousId)\r\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\r\n\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n\r\n  const allowance = new BigNumber(userData?.allowance || 0)\r\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\r\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\r\n  const earnings = new BigNumber(userData?.pendingReward || 0)\r\n\r\n  const blocksUntilStart = Math.max(startBlock - block, 0)\r\n  const blocksRemaining = Math.max(endBlock - block, 0)\r\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\r\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\r\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\r\n  const isCardActive = isFinished && accountHasStakedBalance\r\n\r\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\r\n      onConfirm={onStake}\r\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\r\n    />,\r\n  )\r\n\r\n  const [onPresentCompound] = useModal(\r\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\r\n  )\r\n\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\r\n  )\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, setRequestedApproval])\r\n\r\n  return (\r\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\r\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\r\n      <div style={{ padding: '24px' }}>\r\n        <CardTitle isFinished={isFinished && sousId !== 0}>\r\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\r\n        </CardTitle>\r\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\r\n          <div style={{ flex: 1 }}>\r\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\r\n          </div>\r\n          {account && harvest && !isOldSyrup && (\r\n            <HarvestButton\r\n              disabled={!earnings.toNumber() || pendingTx}\r\n              text={pendingTx ? 'Collecting' : 'Harvest'}\r\n              onClick={async () => {\r\n                setPendingTx(true)\r\n                await onReward()\r\n                setPendingTx(false)\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        {!isOldSyrup ? (\r\n          <BalanceAndCompound>\r\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\r\n            {sousId === 0 && account && harvest && (\r\n              <HarvestButton\r\n                disabled={!earnings.toNumber() || pendingTx}\r\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\r\n                onClick={onPresentCompound}\r\n              />\r\n            )}\r\n          </BalanceAndCompound>\r\n        ) : (\r\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\r\n        )}\r\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\r\n        <StyledCardActions>\r\n          {!account && <UnlockButton />}\r\n          {account &&\r\n            (needsApproval && !isOldSyrup ? (\r\n              <div style={{ flex: 1 }}>\r\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\r\n                  {`Approve ${stakingTokenName}`}\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\r\n                  onClick={\r\n                    isOldSyrup\r\n                      ? async () => {\r\n                          setPendingTx(true)\r\n                          await onUnstake('0')\r\n                          setPendingTx(false)\r\n                        }\r\n                      : onPresentWithdraw\r\n                  }\r\n                >\r\n                  {`Unstake ${stakingTokenName}`}\r\n                </Button>\r\n                <StyledActionSpacer />\r\n                {!isOldSyrup && (\r\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\r\n                    <AddIcon color=\"background\" />\r\n                  </IconButton>\r\n                )}\r\n              </>\r\n            ))}\r\n        </StyledCardActions>\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\r\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\r\n            '-'\r\n          ) : (\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\r\n          )}\r\n        </StyledDetails>\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>\r\n            <span role=\"img\" aria-label={stakingTokenName}>\r\n              🥞{' '}\r\n            </span>\r\n            {TranslateString(384, 'Your Stake')}:\r\n          </div>\r\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\r\n        </StyledDetails>\r\n      </div>\r\n      <CardFooter\r\n        projectLink={projectLink}\r\n        totalStaked={totalStaked}\r\n        blocksRemaining={blocksRemaining}\r\n        isFinished={isFinished}\r\n        blocksUntilStart={blocksUntilStart}\r\n        poolCategory={poolCategory}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst PoolFinishedSash = styled.div`\r\n  background-image: url('/images/pool-finished-sash.svg');\r\n  background-position: top right;\r\n  background-repeat: not-repeat;\r\n  height: 135px;\r\n  position: absolute;\r\n  right: -24px;\r\n  top: -24px;\r\n  width: 135px;\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 16px 0;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n`\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n`\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledDetails = styled.div`\r\n  display: flex;\r\n  font-size: 14px;\r\n`\r\n\r\nexport default PoolCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst PoolTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          {TranslateString(999, 'Active')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          {TranslateString(999, 'Inactive')}\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import React from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Heading } from '@pancakeswap-libs/uikit'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\r\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport Coming from './components/Coming'\r\nimport PoolCard from './components/PoolCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport Divider from './components/Divider'\r\n\r\nconst Farm: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const farms = useFarms()\r\n  const pools = usePools(account)\r\n  const bnbPriceUSD = usePriceBnbBusd()\r\n  const block = useBlock()\r\n\r\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\r\n    const tokenPriceBN = new BigNumber(tokenPrice)\r\n    if (tokenName === 'BNB') {\r\n      return new BigNumber(1)\r\n    }\r\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\r\n      return tokenPriceBN.div(bnbPriceUSD)\r\n    }\r\n    return tokenPriceBN\r\n  }\r\n\r\n  const poolsWithApy = pools.map((pool) => {\r\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\r\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\r\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\r\n\r\n    // /!\\ Assume that the farm quote price is BNB\r\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\r\n    const rewardTokenPriceInBNB = priceToBnb(\r\n      pool.tokenName,\r\n      rewardTokenFarm?.tokenPriceVsQuote,\r\n      rewardTokenFarm?.quoteTokenSymbol,\r\n    )\r\n\r\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\r\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\r\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\r\n\r\n    return {\r\n      ...pool,\r\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\r\n      apy,\r\n    }\r\n  })\r\n\r\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\r\n\r\n  return (\r\n    <Page>\r\n      <Hero>\r\n        <div>\r\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\r\n            {TranslateString(0, 'SuperWIKI POWER    (soon more...)')}\r\n          </Heading>\r\n          <ul>\r\n            <li>{TranslateString(0, 'Stake Tokens to earn new tokens.')}</li>\r\n            <li>{TranslateString(0, 'You can unstake at any time.')}</li>\r\n            <li>{TranslateString(0, 'Rewards are calculated per block.')}</li>\r\n          </ul>\r\n        </div>\r\n        <img src=\"https://github.com/octahedron22/img/raw/main/egg/sWIKI-big.png\" alt=\"POOL icon\" width={410} height={191} />\r\n      </Hero>\r\n      <PoolTabButtons />\r\n      <Divider />\r\n      <FlexLayout>\r\n        <Route exact path={`${path}`}>\r\n          <>\r\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\r\n              <PoolCard key={pool.sousId} pool={pool} />\r\n            ))}\r\n            <Coming />\r\n          </>\r\n        </Route>\r\n        <Route path={`${path}/history`}>\r\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\r\n            <PoolCard key={pool.sousId} pool={pool} />\r\n          ))}\r\n        </Route>\r\n      </FlexLayout>\r\n    </Page>\r\n  )\r\n}\r\n\r\nconst Hero = styled.div`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: 1fr;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 250px;\r\n  padding: 48px 0;\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style-type: none;\r\n    font-size: 16px;\r\n    li {\r\n      margin-bottom: 4px;\r\n    }\r\n  }\r\n  img {\r\n    height: auto;\r\n    max-width: 100%;\r\n  }\r\n  @media (min-width: 576px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    margin: 0;\r\n    max-width: none;\r\n  }\r\n`\r\n\r\nexport default Farm\r\n"],"sourceRoot":""}