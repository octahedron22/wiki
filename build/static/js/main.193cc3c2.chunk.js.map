{"version":3,"sources":["state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","hooks/useRefresh.ts","utils/getRpcUrl.ts","contexts/RefreshContext.tsx","config/constants/types.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","components/layout/Container.tsx","components/layout/Page.tsx","config/constants/contracts.ts","contexts/BlockContext.tsx","utils/multicall.ts","utils/addressHelpers.ts","config/constants/pools.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","config/constants/farms.ts","utils/web3.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","config/constants/nfts.ts","views/Nft/components/NftGlobalNotification.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","contexts/Localisation/translationsContext.ts","state/prices/index.ts","state/hooks.ts","state/block/index.ts"],"names":["fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","BigNumber","div","pow","tokenPriceVsQuote","tokenSymbol","QuoteToken","BUSD","quoteTokenSymbol","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","console","log","toJSON","comparedTo","masterchefABI","pid","info","totalAllocPoint","wikiPerBlock","allocPoint","_hex","poolWeight","toNumber","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","nodes","process","getNodeUrl","randomIndex","random","length","React","createContext","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","PoolCategory","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","TranslationsContext","Container","styled","theme","mediaQueries","sm","Page","lg","cake","56","97","masterChef","wbnb","busd","eth","wiki","lottery","lotteryNFT","mulltiCall","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","web3","getWeb3","getBlockNumber","blockNumber","current","abi","multi","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","res","i","decodeFunctionResult","getCakeAddress","addresses","chainId","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","pools","fetchPoolsBlockLimits","poolsWithEnd","poolsConfig","filter","p","sousId","callsStartBlock","poolConfig","contractAddress","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","startBlock","endBlock","fetchPoolsTotalStatking","nonBnbPools","stakingTokenName","BNB","bnbPool","callsNonBnbPools","stakingTokenAddress","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","bnbPools","nonMasterPools","masterChefContract","masterChefABI","fetchPoolsAllowance","allowances","reduce","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingWiki","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsPublicDataAsync","blockLimits","totalStakings","liveData","blockLimit","totalStaking","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","risk","lpSymbol","contracts","CAKE","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","web3NoAccount","getContract","contractOptions","getWeb3NoAccount","GlobalStyle","createGlobalStyle","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","setTranslations","storedLangCode","localStorage","getItem","storedLang","getStoredLang","fetch","then","r","json","translationApiResponse","catch","e","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","config","label","icon","href","items","Menu","props","useWallet","connect","reset","cakePriceUsd","usePriceCakeBusd","sWIKIPriceUsd","usePricesWIKIBusd","login","logout","currentLang","langs","setLang","links","priceLink","Wrapper","PageLoader","RABBIT_MINTING_FARM_ADDRESS","ModalContent","Actions","NftYouWonModal","onDismiss","TranslateString","title","src","alt","style","height","marginBottom","size","color","as","NftGlobalNotification","useModal","onPresentBurnModal","showModal","checkNftStatus","rabbitmintingfarm","totalSupplyDistributedArr","currentDistributedSupplyArr","canClaimArr","hasClaimedArr","totalSupplyDistributed","currentDistributedSupply","canClaim","hasClaimed","lt","document","location","Home","lazy","Farms","Pools","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","useFetchPublicData","Global","path","exact","tokenMode","component","memo","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","getElementById","defaultTranslationState","fetchPrices","createAsyncThunk","response","update_at","prices","Object","keys","accum","ZERO","isLoading","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","useDispatch","useFarms","useSelector","useFarmFromPid","useFarmUser","usePools","usePriceBnbBusd","useTotalValue","bnbPrice","cakePrice","val","plus","blockSlice","_"],"mappings":"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","file":"static/js/main.193cc3c2.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { QuoteToken } from '../../config/constants/types'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nconst fetchFarms = async () => {\r\n  const data = await Promise.all(\r\n    farmsConfig.map(async (farmConfig) => {\r\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\r\n      const calls = [\r\n        // Balance of token in the LP contract\r\n        {\r\n          address: farmConfig.tokenAddresses[CHAIN_ID],\r\n          name: 'balanceOf',\r\n          params: [lpAdress],\r\n        },\r\n        // Balance of quote token on LP contract\r\n        {\r\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\r\n          name: 'balanceOf',\r\n          params: [lpAdress],\r\n        },\r\n        // Balance of LP tokens in the master chef contract\r\n        {\r\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\r\n          name: 'balanceOf',\r\n          params: [getMasterChefAddress()],\r\n        },\r\n        // Total supply of LP tokens\r\n        {\r\n          address: lpAdress,\r\n          name: 'totalSupply',\r\n        },\r\n        // Token decimals\r\n        {\r\n          address: farmConfig.tokenAddresses[CHAIN_ID],\r\n          name: 'decimals',\r\n        },\r\n        // Quote token decimals\r\n        {\r\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\r\n          name: 'decimals',\r\n        },\r\n      ]\r\n\r\n      const [\r\n        tokenBalanceLP,\r\n        quoteTokenBlanceLP,\r\n        lpTokenBalanceMC,\r\n        lpTotalSupply,\r\n        tokenDecimals,\r\n        quoteTokenDecimals\r\n      ] = await multicall(erc20, calls)\r\n\r\n      let tokenAmount;\r\n      let lpTotalInQuoteToken;\r\n      let tokenPriceVsQuote;\r\n      if(farmConfig.isTokenOnly){\r\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals));\r\n        if(farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD){\r\n          tokenPriceVsQuote = new BigNumber(1);\r\n        }else{\r\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\r\n        }\r\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote);\r\n      }else{\r\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\r\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n        // Total value in staking in quote token value\r\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\r\n          .div(new BigNumber(10).pow(18))\r\n          .times(new BigNumber(2))\r\n          .times(lpTokenRatio)\r\n\r\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\r\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\r\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\r\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\r\n          .times(lpTokenRatio)\r\n\r\n        console.log(\"quoteTokenAmount\" , quoteTokenAmount.toJSON());\r\n        if(tokenAmount.comparedTo(0) > 0){\r\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\r\n        }else{\r\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\r\n        }\r\n\r\n        console.log(\"tokenPriceVsQuote\" , tokenPriceVsQuote.toJSON());\r\n      }\r\n\r\n      const [info, totalAllocPoint, wikiPerBlock] = await multicall(masterchefABI, [\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'poolInfo',\r\n          params: [farmConfig.pid],\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'totalAllocPoint',\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'wikiPerBlock',\r\n        },\r\n      ])\r\n\r\n      const allocPoint = new BigNumber(info.allocPoint._hex)\r\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\r\n\r\n      return {\r\n        ...farmConfig,\r\n        tokenAmount: tokenAmount.toJSON(),\r\n        // quoteTokenAmount: quoteTokenAmount,\r\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\r\n        poolWeight: poolWeight.toNumber(),\r\n        multiplier: `${allocPoint.div(100).toString()}X`,\r\n        depositFeeBP: info.depositFeeBP,\r\n        wikiPerBlock: new BigNumber(wikiPerBlock).toNumber(),\r\n      }\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const fetchFarmUserAllowances = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string) => {\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAdress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\r\n  })\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAdress,\r\n      name: 'pendingWiki',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport fetchFarms from './fetchFarms'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n} from './fetchFarmUser'\r\nimport { FarmsState, Farm } from '../types'\r\n\r\nconst initialState: FarmsState = { data: [...farmsConfig] }\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setFarmsPublicData: (state, action) => {\r\n      const liveFarmsData: Farm[] = action.payload\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    },\r\n    setFarmUserData: (state, action) => {\r\n      const { arrayOfUserDataObjects } = action.payload\r\n      arrayOfUserDataObjects.forEach((userDataEl) => {\r\n        const { index } = userDataEl\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\r\n  const farms = await fetchFarms()\r\n  dispatch(setFarmsPublicData(farms))\r\n}\r\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\r\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\r\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\r\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\r\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\r\n\r\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\r\n    return {\r\n      index,\r\n      allowance: userFarmAllowances[index],\r\n      tokenBalance: userFarmTokenBalances[index],\r\n      stakedBalance: userStakedBalances[index],\r\n      earnings: userFarmEarnings[index],\r\n    }\r\n  })\r\n\r\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\r\n}\r\n\r\nexport default farmsSlice.reducer\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setFast((prev) => prev + 1)\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setSlow((prev) => prev + 1)\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  subTitle?: string\r\n  description?: string\r\n  launchDate: string\r\n  launchTime: string\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  projectSiteUrl: string\r\n  currency: string\r\n  currencyAddress: string\r\n  tokenDecimals: number\r\n  releaseBlockNumber: number\r\n}\r\n\r\nexport enum QuoteToken {\r\n  'BNB' = 'BNB',\r\n  'CAKE' = 'CAKE',\r\n  'SYRUP' = 'SYRUP',\r\n  'BUSD' = 'BUSD',\r\n  'TWT' = 'TWT',\r\n  'UST' = 'UST',\r\n  'WIKI' = 'WIKI',\r\n  'JAGUAR' = 'JAGUAR',\r\n  'sWIKI' = 'sWIKI'\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n}\r\n\r\nexport interface Address {\r\n  97?: string\r\n  56: string\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  tokenSymbol: string\r\n  tokenAddresses: Address\r\n  quoteTokenSymbol: QuoteToken\r\n  quoteTokenAdresses: Address\r\n  multiplier?: string\r\n  isTokenOnly?: boolean\r\n  isCommunity?: boolean\r\n  risk: number\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  image?: string\r\n  tokenName: string\r\n  stakingTokenName: QuoteToken\r\n  stakingLimit?: number\r\n  stakingTokenAddress?: string\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  projectLink: string\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  tokenDecimals: number\r\n}\r\n\r\nexport type Nft = {\r\n  name: string\r\n  description: string\r\n  originalImage: string\r\n  previewImage: string\r\n  blurImage: string\r\n  sortOrder: number\r\n  bunnyId: number\r\n}\r\n","import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\nconst variableRegex = /%(.*?)%/\r\n\r\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\r\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\r\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\r\n  const fallbackValueAtIndex = fallback.split(' ')[0]\r\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\r\n}\r\n\r\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\r\n  const foundTranslation = translations.find((translation) => {\r\n    return translation.data.stringId === translationId\r\n  })\r\n  if (foundTranslation) {\r\n    const translatedString = foundTranslation.data.text\r\n    const includesVariable = translatedString.includes('%')\r\n    if (includesVariable) {\r\n      return replaceDynamicString(translatedString, fallback)\r\n    }\r\n    return translatedString\r\n  }\r\n  return fallback\r\n}\r\n\r\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\r\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\r\n// @see https://reactjs.org/docs/hooks-rules.html\r\nexport const TranslateString = (translationId: number, fallback: string) => {\r\n  const { translations } = useContext(TranslationsContext)\r\n  if (translations[0] === 'error') {\r\n    return fallback\r\n  }\r\n  if (translations.length > 0) {\r\n    return getTranslation(translations, translationId, fallback)\r\n  }\r\n  return fallback\r\n}\r\n","import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\nimport { getTranslation } from '../utils/translateTextHelpers'\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string) => {\r\n    if (translations[0] === 'error') {\r\n      return fallback\r\n    }\r\n    if (translations.length > 0) {\r\n      return getTranslation(translations, translationId, fallback)\r\n    }\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1100px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n","export default {\r\n  cake: {\r\n    56: '0x372a61EBEB3fF5f36f603eAa4dF890b18d36065D', // WIKI\r\n    97: '',\r\n  },\r\n  masterChef: {\r\n    56: '0x740A1c61A17BC7F498e33251dAADc80ECB27E05A',\r\n    97: '',\r\n  },\r\n\r\n  wbnb: {\r\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    97: '',\r\n  },\r\n\r\n    busd: {\r\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n    97: '',\r\n  },    \r\n  \r\n  eth: {\r\n    56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n    97: '',\r\n  },\r\n  \r\n  wiki: {\r\n    56: '0x372a61EBEB3fF5f36f603eAa4dF890b18d36065D',\r\n    97: '',\r\n  },\r\n\r\n  lottery: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  lotteryNFT: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  mulltiCall: {\r\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\r\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\r\n  },\r\n\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { getWeb3 } from 'utils/web3'\r\n\r\nconst BlockContext = React.createContext(0)\r\n\r\nconst BlockContextProvider = ({ children }) => {\r\n  const previousBlock = useRef(0)\r\n  const [block, setBlock] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      if (blockNumber !== previousBlock.current) {\r\n        previousBlock.current = blockNumber\r\n        setBlock(blockNumber)\r\n      }\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\r\n}\r\n\r\nexport { BlockContext, BlockContextProvider }\r\n","import { AbiItem } from 'web3-utils'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\ninterface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (exemple: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\nconst multicall = async (abi: any[], calls: Call[]) => {\r\n  const web3 = getWeb3()\r\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const { returnData } = await multi.methods.aggregate(calldata).call()\r\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import addresses from 'config/constants/contracts'\r\n\r\nconst chainId = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const getCakeAddress = () => {\r\n  return addresses.cake[chainId]\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return addresses.masterChef[chainId]\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return addresses.mulltiCall[chainId]\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return addresses.wbnb[chainId]\r\n}\r\nexport const getLotteryAddress = () => {\r\n  return addresses.lottery[chainId]\r\n}\r\nexport const getLotteryTicketAddress = () => {\r\n  return addresses.lotteryNFT[chainId]\r\n}\r\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n\r\n   // {\r\n   //  sousId: 0,\r\n   //  tokenName: 'CAKE',\r\n   //  stakingTokenName: QuoteToken.CAKE,\r\n    // stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    // contractAddress: {\r\n    //  97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n    //   56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n  //  },\r\n   //  poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://pancakeswap.finance/',\r\n   // harvest: true,\r\n   //  tokenPerBlock: '10',\r\n  //  sortOrder: 1,\r\n  //   isFinished: false,\r\n  //   tokenDecimals: 18,\r\n  // },\r\n\r\n \r\n]\r\n\r\nexport default pools\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getWbnbAddress } from 'utils/addressHelpers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.contractAddress[CHAIN_ID],\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStatking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.stakingTokenAddress,\r\n      name: 'balanceOf',\r\n      params: [poolConfig.contractAddress[CHAIN_ID]],\r\n    }\r\n  })\r\n\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: getWbnbAddress(),\r\n      name: 'balanceOf',\r\n      params: [poolConfig.contractAddress[CHAIN_ID]],\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n","import { AbiItem } from 'web3-utils'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst web3 = getWeb3()\r\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'allowance',\r\n    params: [account, p.contractAddress[CHAIN_ID]],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: p.contractAddress[CHAIN_ID],\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: p.contractAddress[CHAIN_ID],\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.methods.pendingWiki('0', account).call()\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { PoolsState, Pool } from '../types'\r\n\r\nconst initialState: PoolsState = { data: [...poolsConfig] }\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStatking()\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  const stakingTokenBalances = await fetchUserBalances(account)\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n  const userData = poolsConfig.map((pool) => ({\r\n    sousId: pool.sousId,\r\n    allowance: allowances[pool.sousId],\r\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n    stakedBalance: stakedBalances[pool.sousId],\r\n    pendingReward: pendingRewards[pool.sousId],\r\n  }))\r\n\r\n  dispatch(setPoolsUserData(userData))\r\n}\r\n\r\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n}\r\n\r\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const tokenBalances = await fetchUserBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n}\r\n\r\nexport default PoolsSlice.reducer\r\n","import contracts from './contracts'\r\nimport { FarmConfig, QuoteToken } from './types'\r\n\r\nconst farms: FarmConfig[] = [\r\n  {\r\n    pid: 0,\r\n    \r\n    risk: 5,\r\n    lpSymbol: 'WIKI-BUSD LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE0323b608ef2D08af20eC3238Bfd8E38359A4B2C',  // WIKI-BUSD\r\n    },\r\n    tokenSymbol: 'WIKI',\r\n    tokenAddresses: {\r\n      97: '',     \r\n      56: '0x372a61EBEB3fF5f36f603eAa4dF890b18d36065D',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n\r\n  {\r\n    pid: 27,\r\n    risk: 6,\r\n    lpSymbol: 'WIKI-USDC LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5FcD22D70D542D845Ce87c421f2135BAB9226D0e', // WIKI-USDC LP\r\n    },\r\n    tokenSymbol: 'USDC',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.CAKE,\r\n    quoteTokenAdresses: contracts.cake,\r\n  },\r\n\r\n  {\r\n    pid: 1,\r\n    risk: 5,\r\n    lpSymbol: 'WIKI-BNB LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x221d6349788909b9e996246091aa41b275793207', // WIKI-BNB   \r\n    },\r\n    tokenSymbol: 'WIKI',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x372a61EBEB3fF5f36f603eAa4dF890b18d36065D',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n\r\n  {\r\n    pid: 25,    \r\n    risk: 5,\r\n    lpSymbol: 'sWIKI-BUSD LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc3c29259dfb2b3d66d4e2e9b057015b3e1ea1d5e', // sWIKI-BUSD LP\r\n    },\r\n    tokenSymbol: 'sWIKI',\r\n    tokenAddresses: {\r\n      97: '',     \r\n      56: '0x8bde81029eda5e7381794c0df7ed65e6bb9005e0',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n\r\n  {\r\n    pid: 24,\r\n    risk: 6,\r\n    lpSymbol: 'WIKI-SHRIMP LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x586c6b6c80c74b75a2c0d898749b1f59d6a9f88f', // WIKI-SHRIMP LP\r\n    },\r\n    tokenSymbol: 'SHRIMP',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x62ee12e4fe74a815302750913c3c796bca23e40e',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.CAKE,\r\n    quoteTokenAdresses: contracts.cake,\r\n  },\r\n\r\n \r\n\r\n  {\r\n    pid: 18,\r\n    risk: 1,\r\n    lpSymbol: 'WIKI-JAGUAR LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9F6669c552878876dB865065fEDDF7b313Ae9dE1', // WIKI-JAGUAR LP\r\n    },\r\n    tokenSymbol: 'JAGUAR',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x4a3524936db5c310d852266033589d3f6f30ba5d',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.CAKE,\r\n    quoteTokenAdresses: contracts.cake,\r\n  },\r\n  \r\n  {\r\n    pid: 19,\r\n    risk: 1,\r\n    lpSymbol: 'WIKI-PANTHER LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9cd5ea61e38379819b1a508fe2c841ec3cb6d068', // WIKI-PANTHER LP\r\n    },\r\n    tokenSymbol: 'PANTHER',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x1f546ad641b56b86fd9dceac473d1c7a357276b7',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.CAKE,\r\n    quoteTokenAdresses: contracts.cake,\r\n  },\r\n  {\r\n    pid: 20,\r\n    risk: 1,\r\n    lpSymbol: 'WIKI-SLION LP v2',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa32ee3c6a3b46b71dce03dc729d60d9a8fd81993', // WIKI-SLION LP\r\n    },\r\n    tokenSymbol: 'SLION',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xb9fcb5b2935d57a8568b6309b3093200482c448d',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.CAKE,\r\n    quoteTokenAdresses: contracts.cake,\r\n  },\r\n\r\n  {\r\n    pid: 2,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'WIKI',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE0323b608ef2D08af20eC3238Bfd8E38359A4B2C', // WIKI-BUSD\r\n    },\r\n    tokenSymbol: 'WIKI',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x372a61EBEB3fF5f36f603eAa4dF890b18d36065D',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n\r\n  {\r\n    pid: 26,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'sWIKI',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc3c29259dfb2b3d66d4e2e9b057015b3e1ea1d5e', // sWIKI-BUSD\r\n    },\r\n    tokenSymbol: 'sWIKI',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x8bde81029eda5e7381794c0df7ed65e6bb9005e0',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n\r\n  {\r\n    pid: 28,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'HALVAR',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x21bD5a4907d32c4e3520E7bf411Ca76E6C4de891', // HALVAR-BUSD\r\n    },\r\n    tokenSymbol: 'HALVAR',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xddEae2A6BD45f85B8062ddE299e76dFf8414E834',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n\r\n  {\r\n    pid: 30,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'FOX',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3ffe5e2b00E0Ce19d6c3b3381a04Fa046DAEb057', // FOX-BUSD\r\n    },\r\n    tokenSymbol: 'FOX',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x9dadff8ecd3f09bC4bac9b6fDD153E60b78D10dD',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n\r\n\r\n  {\r\n    pid: 29,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'MoonWiki',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa3af99b03df7f35b11ec8c7d99968c085b9ee8ae', // mWIKI-BNB\r\n    },\r\n    tokenSymbol: 'mWIKI',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x3540e2e9b59b65d891ed308c466b30cb8e9740ce',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n\r\n \r\n\r\n  {\r\n    pid: 3,\r\n    risk: 3,\r\n    lpSymbol: 'BNB-BUSD LP v1',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\r\n    },\r\n    tokenSymbol: 'BNB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n\r\n  \r\n  {\r\n  pid: 4,\r\n  risk: 3,\r\n  lpSymbol: 'BNB-BUSD LP v2',\r\n  lpAddresses: {\r\n    97: '',\r\n    56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n  },\r\n  tokenSymbol: 'BNB',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n  },\r\n  quoteTokenSymbol: QuoteToken.BUSD,\r\n  quoteTokenAdresses: contracts.busd,\r\n},\r\n{\r\n  pid: 5,\r\n  risk: 2,\r\n  lpSymbol: 'BTCB-BNB LP v2',\r\n  lpAddresses: {\r\n    97: '',\r\n    56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\r\n  },\r\n  tokenSymbol: 'BTCB',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n  },\r\n  quoteTokenSymbol: QuoteToken.BNB,\r\n  quoteTokenAdresses: contracts.wbnb,\r\n},\r\n{\r\n  pid: 6,\r\n  risk: 2,\r\n  lpSymbol: 'ETH-BNB LP v2',\r\n  lpAddresses: {\r\n    97: '',\r\n    56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\r\n  },\r\n  tokenSymbol: 'ETH',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n  },\r\n  quoteTokenSymbol: QuoteToken.BNB,\r\n  quoteTokenAdresses: contracts.wbnb,\r\n},\r\n{\r\n  pid: 7,\r\n  risk: 4,\r\n  lpSymbol: 'CAKE-BNB LP v2',\r\n  lpAddresses: {\r\n    97: '',\r\n    56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\r\n  },\r\n  tokenSymbol: 'CAKE',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n  },\r\n  quoteTokenSymbol: QuoteToken.BNB,\r\n  quoteTokenAdresses: contracts.wbnb,\r\n},\r\n{\r\n  pid: 8,\r\n  risk: 3,\r\n  lpSymbol: 'DOT-BNB LP v2',\r\n  lpAddresses: {\r\n    97: '',\r\n    56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\r\n  },\r\n  tokenSymbol: 'DOT',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\r\n  },\r\n  quoteTokenSymbol: QuoteToken.BNB,\r\n  quoteTokenAdresses: contracts.wbnb,\r\n},\r\n{\r\n  pid: 9,\r\n  risk: 4,\r\n  lpSymbol: 'ADA-BNB LP v2',\r\n  lpAddresses: {\r\n    97: '',\r\n    56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\r\n  },\r\n  tokenSymbol: 'ADA',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\r\n  },\r\n  quoteTokenSymbol: QuoteToken.BNB,\r\n  quoteTokenAdresses: contracts.wbnb,\r\n},\r\n{\r\n  pid: 10,\r\n  risk: 4,\r\n  lpSymbol: 'LINK-BNB LP v2',\r\n  lpAddresses: {\r\n    97: '',\r\n    56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\r\n  },\r\n  tokenSymbol: 'LINK',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\r\n  },\r\n  quoteTokenSymbol: QuoteToken.BNB,\r\n  quoteTokenAdresses: contracts.wbnb,\r\n},\r\n\r\n{\r\n  pid: 22,\r\n  risk: 3,\r\n  lpSymbol: 'UNI-BNB LP v2',\r\n  lpAddresses: {\r\n    97: '',\r\n    56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\r\n  },\r\n  tokenSymbol: 'UNI',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\r\n  },\r\n  quoteTokenSymbol: QuoteToken.BNB,\r\n  quoteTokenAdresses: contracts.wbnb,\r\n},\r\n\r\n{\r\n  pid: 11,\r\n  risk: 1,\r\n   lpSymbol: 'DAI-BUSD LP v2',\r\n  lpAddresses: {\r\n    97: '',\r\n   56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489', // DAI-BUSD LP\r\n  },\r\n   tokenSymbol: 'DAI',\r\n  tokenAddresses: {\r\n    97: '',\r\n  56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\r\n },\r\n quoteTokenSymbol: QuoteToken.BUSD,\r\nquoteTokenAdresses: contracts.busd,\r\n},\r\n{\r\n  pid: 12,\r\n  risk: 1,\r\n  lpSymbol: 'USDC-BUSD LP v2',\r\n  lpAddresses: {\r\n    97: '',\r\n    56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1', // USDC-BUSD LP\r\n  },\r\n  tokenSymbol: 'USDC',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\r\n  },\r\n  quoteTokenSymbol: QuoteToken.BUSD,\r\n  quoteTokenAdresses: contracts.busd,\r\n},\r\n{\r\n  pid: 13,\r\n  risk: 1,\r\n  isTokenOnly: true,\r\n  lpSymbol: 'BUSD',\r\n  lpAddresses: {\r\n    97: '',\r\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56', // solo BUSD\r\n  },\r\n  tokenSymbol: 'BUSD',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56', \r\n  },\r\n  quoteTokenSymbol: QuoteToken.BUSD,\r\n  quoteTokenAdresses: contracts.busd,\r\n},\r\n{\r\n  pid: 14,\r\n  risk: 1,\r\n  isTokenOnly: true,\r\n  lpSymbol: 'BNB',\r\n  lpAddresses: {\r\n    97: '',\r\n    56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16', // BNB-BUSD LP\r\n  },\r\n  tokenSymbol: 'BNB',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', \r\n  },\r\n  quoteTokenSymbol: QuoteToken.BUSD,\r\n  quoteTokenAdresses: contracts.busd,\r\n},\r\n{\r\n  pid: 15,\r\n  risk: 2,\r\n  isTokenOnly: true,\r\n  lpSymbol: 'BTCB',\r\n  lpAddresses: {\r\n    97: '',\r\n    56: '0xF45cd219aEF8618A92BAa7aD848364a158a24F33', // BTCB-BUSD LP\r\n  },\r\n  tokenSymbol: 'BTCB',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n  },\r\n  quoteTokenSymbol: QuoteToken.BUSD,\r\n  quoteTokenAdresses: contracts.busd,\r\n},\r\n{\r\n  pid: 16,\r\n  risk: 2,\r\n  isTokenOnly: true,\r\n  lpSymbol: 'ETH',\r\n  lpAddresses: {\r\n    97: '',\r\n    56: '0xd9A0d1F5e02dE2403f68Bb71a15F8847A854b494', // ETH-BUSD LP\r\n  },\r\n  tokenSymbol: 'ETH',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n  },\r\n  quoteTokenSymbol: QuoteToken.BUSD,\r\n  quoteTokenAdresses: contracts.busd,\r\n},\r\n{\r\n  pid: 17,\r\n  risk: 4,\r\n  isTokenOnly: true,\r\n  lpSymbol: 'CAKE',\r\n  lpAddresses: {\r\n   97: '',\r\n   56: '0x0ed8e0a2d99643e1e65cca22ed4424090b8b7458', // CAKE-BUSD LP\r\n },\r\n tokenSymbol: 'CAKE',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n  },\r\n  quoteTokenSymbol: QuoteToken.BUSD,\r\n  quoteTokenAdresses: contracts.busd,\r\n},\r\n\r\n\r\n\r\n{\r\n  pid: 21,\r\n  risk: 2,\r\n  lpSymbol: 'BNB-USDT LP v2',\r\n  lpAddresses: {\r\n    97: '',\r\n    56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\r\n  },\r\n  tokenSymbol: 'USDT',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0x55d398326f99059fF775485246999027B3197955',\r\n  },\r\n  quoteTokenSymbol: QuoteToken.BNB,\r\n  quoteTokenAdresses: contracts.wbnb,\r\n},\r\n\r\n\r\n\r\n\r\n\r\n{\r\n  pid: 23,\r\n  risk: 1,\r\n  lpSymbol: 'USDT-BUSD LP v2',\r\n  lpAddresses: {\r\n    97: '',\r\n    56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\r\n  },\r\n  tokenSymbol: 'USDT',\r\n  tokenAddresses: {\r\n    97: '',\r\n    56: '0x55d398326f99059ff775485246999027b3197955',\r\n  },\r\n  quoteTokenSymbol: QuoteToken.BUSD,\r\n  quoteTokenAdresses: contracts.busd,\r\n},\r\n\r\n\r\n]\r\nexport default farms\r\n","import Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\nconst web3NoAccount = new Web3(httpProvider)\r\n\r\n/**\r\n * Provides a web3 instance using our own private provider httpProver\r\n */\r\nconst getWeb3 = () => {\r\n  const web3 = new Web3(httpProvider)\r\n  return web3\r\n}\r\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\r\n  const web3 = getWeb3()\r\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\r\n}\r\n\r\nconst getWeb3NoAccount = () => {\r\n  return web3NoAccount\r\n}\r\n\r\nexport { getWeb3NoAccount }\r\nexport { getWeb3, getContract, httpProvider }\r\nexport default web3NoAccount","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n\r\n    nav svg {\r\n      fill: #e59202 !important;\r\n      overflow: inherit !important;\r\n      \r\n    }\r\n\r\n    nav svg:nth-child(2){margin-top: -55px;}\r\n\r\n    nav image{\r\n      height: 100px  !important;\r\n    }\r\n\r\n    button{\r\n    border: 0 !important;\r\n    outline: none !important;\r\n    }\r\n\r\n\r\n\r\n    @media only screen and (max-width: 800px) {\r\n      nav image{\r\n      height: 35px !important;\r\n        }\r\n    }\r\n\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","export const EN = { code: 'en', language: 'English' }\r\nexport const AR = { code: 'ar', language: 'العربية' }\r\nexport const CA = { code: 'ca', language: 'Català' }\r\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\r\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\r\nexport const CS = { code: 'cs', language: 'Čeština' }\r\nexport const DA = { code: 'da', language: 'Dansk' }\r\nexport const DE = { code: 'de', language: 'Deutsch' }\r\nexport const NL = { code: 'nl', language: 'Nederlands' }\r\nexport const FIL = { code: 'fil', language: 'Filipino' }\r\nexport const FI = { code: 'fi', language: 'Suomalainen' }\r\nexport const FR = { code: 'fr', language: 'Français' }\r\nexport const EL = { code: 'el', language: 'Ελληνικά' }\r\nexport const HI = { code: 'hi', language: 'हिंदी' }\r\nexport const HU = { code: 'hu', language: 'Magyar' }\r\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\r\nexport const IT = { code: 'it', language: 'Italiano' }\r\nexport const JA = { code: 'ja', language: '日本語' }\r\nexport const KO = { code: 'ko', language: '한국어' }\r\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\r\nexport const RO = { code: 'ro', language: 'Română' }\r\nexport const RU = { code: 'ru', language: 'Русский' }\r\nexport const SR = { code: 'sr', language: 'Српски' }\r\nexport const ESES = { code: 'es-ES', language: 'Español' }\r\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\r\nexport const TA = { code: 'ta', language: 'தமிழ்' }\r\nexport const TR = { code: 'tr', language: 'Türkçe' }\r\nexport const UK = { code: 'uk', language: 'Українська' }\r\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\r\n\r\nexport const allLanguages = [\r\n  EN,\r\n  // AR,\r\n  // CA,\r\n  ZHCN,\r\n  ZHTW,\r\n  // CS,\r\n  // DA,\r\n  // DE,\r\n  // NL,\r\n  // FIL,\r\n  // FI,\r\n  // FR,\r\n  // EL,\r\n  // HI,\r\n  // HU,\r\n  // ID,\r\n  // IT,\r\n  // JA,\r\n  // KO,\r\n  // PTBR,\r\n  // RO,\r\n  // RU,\r\n  // SR,\r\n  // ESES,\r\n  // SVSE,\r\n  // TA,\r\n  // TR,\r\n  // UK,\r\n  // VI,\r\n]\r\n","import React, { useState, useEffect } from 'react'\r\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\r\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\r\n\r\nconst CACHE_KEY = 'pancakeSwapLanguage'\r\n\r\nexport interface LangType {\r\n  code: string\r\n  language: string\r\n}\r\n\r\nexport interface LanguageState {\r\n  selectedLanguage: LangType\r\n  setSelectedLanguage: (langObject: LangType) => void\r\n  translatedLanguage: LangType\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\r\n}\r\n\r\nconst LanguageContext = React.createContext({\r\n  selectedLanguage: EN,\r\n  setSelectedLanguage: () => undefined,\r\n  translatedLanguage: EN,\r\n  setTranslatedLanguage: () => undefined,\r\n} as LanguageState)\r\n\r\nconst fileId = 8\r\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\r\nconst stringTranslationsApi = new StringTranslations({\r\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\r\n})\r\n\r\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\r\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n}\r\n\r\nconst LanguageContextProvider = ({ children }) => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n\r\n  const getStoredLang = (storedLangCode: string) => {\r\n    return allLanguages.filter((language) => {\r\n      return language.code === storedLangCode\r\n    })[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\r\n    if (storedLangCode) {\r\n      const storedLang = getStoredLang(storedLangCode)\r\n      setSelectedLanguage(storedLang)\r\n    } else {\r\n      setSelectedLanguage(EN)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage) {\r\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\r\n      fetch(`./i18n/${selectedLanguage.code}.json`)\r\n        .then(r=>r.json())\r\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\r\n        .then((translationApiResponse) => {\r\n          if (translationApiResponse.data.length < 1) {\r\n            setTranslations(['error'])\r\n          } else {\r\n            setTranslations(translationApiResponse.data)\r\n          }\r\n        })\r\n        .then(() => setTranslatedLanguage(selectedLanguage))\r\n        .catch((e) => {\r\n          console.error(\"ERROR\");\r\n          console.error(e);\r\n          setTranslations(['error'])\r\n        })\r\n    }\r\n  }, [selectedLanguage, setTranslations])\r\n\r\n  const handleLanguageSelect = (langObject: LangType) => {\r\n    setSelectedLanguage(langObject)\r\n    localStorage.setItem(CACHE_KEY, langObject.code)\r\n  }\r\n\r\n  return (\r\n    <LanguageContext.Provider\r\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\r\n    >\r\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\r\n    </LanguageContext.Provider>\r\n  )\r\n}\r\n\r\nexport { LanguageContext, LanguageContextProvider }\r\n","import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@pancakeswap-libs/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\r\nimport { ThemeContext } from 'contexts/ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeCopntext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\r\n\r\nconst config: MenuEntry[] = [\r\n  {\r\n    label: 'Home',\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: 'Trade',\r\n    icon: 'TradeIcon',\r\n    items: [\r\n      {\r\n        label: 'Exchange',\r\n        href: 'https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x372a61EBEB3fF5f36f603eAa4dF890b18d36065D',\r\n      },\r\n      {\r\n        label: 'Liquidity',\r\n        href: 'https://exchange.pancakeswap.finance/#/add/BNB/0x372a61EBEB3fF5f36f603eAa4dF890b18d36065D',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Farms',\r\n    icon: 'FarmIcon',\r\n    href: '/farms',\r\n  },\r\n  {\r\n    label: 'Singles',\r\n    icon: 'PoolIcon',\r\n    href: '/pools',\r\n  },\r\n  \r\n  {\r\n    label: 'Tokens for WIKI',\r\n    icon: 'GroupsIcon',\r\n    href: '/staking',\r\n  },\r\n\r\n  {\r\n    label: 'Price Info',\r\n    icon: 'InfoIcon',\r\n    items: [\r\n       {\r\n        label: 'Price Chart WIKI',\r\n        href: 'https://dex.guru/token/0x372a61ebeb3ff5f36f603eaa4df890b18d36065d-bsc',\r\n      },\r\n\r\n      {\r\n        label: 'Price Chart SuperWIKI',\r\n        href: 'https://dex.guru/token/0x8bde81029eda5e7381794c0df7ed65e6bb9005e0-bsc',\r\n      },\r\n\r\n      {\r\n        label: 'PancakeSwap',\r\n        href: 'https://pancakeswap.info/',\r\n      },\r\n     \r\n    ],\r\n  },\r\n\r\n  {\r\n    label: 'More Info',\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: 'Gitbook',\r\n        href: 'https://farmwiki.gitbook.io/farmwiki/',\r\n      },\r\n    ],\r\n  },\r\n\r\n\r\n  {\r\n    label: 'GO to HALVAR',\r\n    icon: 'HomeIcon',\r\n    href: 'https://halvar.farmwiki.xyz/',\r\n  },\r\n  \r\n\r\n\r\n\r\n]\r\n\r\nexport default config\r\n","import React, { useContext } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { allLanguages } from 'config/localisation/languageCodes'\r\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { usePriceCakeBusd, usePricesWIKIBusd } from 'state/hooks'\r\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\r\nimport config from './config'\r\n\r\nconst Menu = (props) => {\r\n  const { account, connect, reset } = useWallet()\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const sWIKIPriceUsd = usePricesWIKIBusd()\r\n\r\n  return (\r\n    <UikitMenu\r\n      account={account}\r\n      login={connect}\r\n      logout={reset}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={selectedLanguage && selectedLanguage.code}\r\n      langs={allLanguages}\r\n      setLang={setSelectedLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      sWIKIPriceUsd={sWIKIPriceUsd.toNumber()}\r\n      links={config}\r\n      priceLink=\"https://dex.guru/token/0x372a61ebeb3ff5f36f603eaa4df890b18d36065d-bsc\"\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '@pancakeswap-libs/uikit'\r\nimport Page from './layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","import { Nft } from './types'\r\n\r\nexport const RABBIT_MINTING_FARM_ADDRESS = '0x7c8b60d2b859a38c8B9b5B6CB4565485cb637c7a'\r\nexport const PANCAKE_RABBITS_ADDRESS = '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07'\r\n\r\nconst Nfts: Nft[] = [\r\n  {\r\n    name: 'Swapsies',\r\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\r\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\r\n    previewImage: 'swapsies-preview.png',\r\n    blurImage: 'swapsies-blur.png',\r\n    sortOrder: 999,\r\n    bunnyId: 0,\r\n  },\r\n  {\r\n    name: 'Drizzle',\r\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\r\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\r\n    previewImage: 'drizzle-preview.png',\r\n    blurImage: 'drizzle-blur.png',\r\n    sortOrder: 999,\r\n    bunnyId: 1,\r\n  },\r\n  {\r\n    name: 'Blueberries',\r\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\r\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\r\n    previewImage: 'blueberries-preview.png',\r\n    blurImage: 'blueberries-blur.png',\r\n    sortOrder: 999,\r\n    bunnyId: 2,\r\n  },\r\n  {\r\n    name: 'Circular',\r\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\r\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\r\n    previewImage: 'circular-preview.png',\r\n    blurImage: 'circular-blur.png',\r\n    sortOrder: 999,\r\n    bunnyId: 3,\r\n  },\r\n  {\r\n    name: 'Sparkle',\r\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\r\n    originalImage: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\r\n    previewImage: 'sparkle-preview.png',\r\n    blurImage: 'sparkle-blur.png',\r\n    sortOrder: 999,\r\n    bunnyId: 4,\r\n  },\r\n]\r\n\r\nexport default Nfts\r\n","import React, { useEffect, useRef } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Modal, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\r\nimport { RABBIT_MINTING_FARM_ADDRESS } from 'config/constants/nfts'\r\nimport multicall from 'utils/multicall'\r\n\r\ninterface NftYouWonModalProps {\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ModalContent = styled.div`\r\n  padding: 24px;\r\n  text-align: center;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst NftYouWonModal: React.FC<NftYouWonModalProps> = ({ onDismiss }) => {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\r\n      <ModalContent>\r\n        <img src=\"/images/present.svg\" alt=\"You won present\" style={{ height: '64px', marginBottom: '24px' }} />\r\n        <Heading size=\"lg\" color=\"secondary\">\r\n          {TranslateString(999, 'You won an NFT!')}\r\n        </Heading>\r\n      </ModalContent>\r\n      <Actions>\r\n        <Button as=\"a\" href=\"/nft\">\r\n          {TranslateString(999, 'Go to claim NFT')}\r\n        </Button>\r\n      </Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\n/**\r\n * 1. Checks if nft supply available\r\n * 2. If supply is available check if the user can claim\r\n * 3. If the user can claim show a modal\r\n */\r\nconst NftGlobalNotification = () => {\r\n  const { account } = useWallet()\r\n  const [onPresentBurnModal] = useModal(<NftYouWonModal />)\r\n  const showModal = useRef(() => onPresentBurnModal())\r\n\r\n  useEffect(() => {\r\n    const checkNftStatus = async () => {\r\n      const [totalSupplyDistributedArr, currentDistributedSupplyArr, canClaimArr, hasClaimedArr] = await multicall(\r\n        rabbitmintingfarm,\r\n        [\r\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'totalSupplyDistributed' },\r\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'currentDistributedSupply' },\r\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'canClaim', params: [account] },\r\n          { address: RABBIT_MINTING_FARM_ADDRESS, name: 'hasClaimed', params: [account] },\r\n        ],\r\n      )\r\n\r\n      // TODO: Figure out why these values are coming back as an array\r\n      const [totalSupplyDistributed]: [BigNumber] = totalSupplyDistributedArr\r\n      const [currentDistributedSupply]: [BigNumber] = currentDistributedSupplyArr\r\n      const [canClaim]: [boolean] = canClaimArr\r\n      const [hasClaimed]: [boolean] = hasClaimedArr\r\n\r\n      if (currentDistributedSupply.lt(totalSupplyDistributed) && canClaim && !hasClaimed) {\r\n        showModal.current()\r\n      }\r\n    }\r\n\r\n    if (account && !document.location.href.includes('/nft')) {\r\n      checkNftStatus()\r\n    }\r\n  }, [account, showModal])\r\n\r\n  return <div />\r\n}\r\n\r\nexport default NftGlobalNotification\r\n","import React, { useEffect, Suspense, lazy } from 'react'\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useFetchPublicData } from 'state/hooks'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport PageLoader from './components/PageLoader'\r\nimport NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page'\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\n// const Lottery = lazy(() => import('./views/Lottery'))\r\n const Pools = lazy(() => import('./views/Pools'))\r\n// const Ifos = lazy(() => import('./views/Ifos'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\n// const Nft = lazy(() => import('./views/Nft'))\r\n\r\n// This config is required for number formating\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  const { account, connect } = useWallet()\r\n  useEffect(() => {\r\n    if (!account && window.localStorage.getItem('accountStatus')) {\r\n      connect('injected')\r\n    }\r\n  }, [account, connect])\r\n\r\n  useFetchPublicData()\r\n\r\n  return (\r\n    <Router>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <Suspense fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Farms tokenMode />\r\n            </Route>\r\n            {/* <Route path=\"/pools\"> */}\r\n            {/* <Pools /> */}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/lottery\"> */}\r\n            {/*  <Lottery /> */}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/ifo\"> */}\r\n            {/*  <Ifos /> */}\r\n            {/* </Route> */}\r\n            {/* <Route path=\"/nft\"> */}\r\n            {/*  <Nft /> */}\r\n            {/* </Route> */}\r\n            {/* Redirect */}\r\n            <Route path=\"/staking\">\r\n            <Pools />\r\n            </Route>\r\n            {/* <Route path=\"/syrup\"> */}\r\n            {/*  <Redirect to=\"/pools\" /> */}\r\n            {/* </Route> */}\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Menu>\r\n      <NftGlobalNotification />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport farmsReducer from './farms'\r\nimport poolsReducer from './pools'\r\n\r\nexport default configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    farms: farmsReducer,\r\n    pools: poolsReducer,\r\n  },\r\n})\r\n","import React from 'react'\r\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\r\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\r\nimport * as bsc from '@binance-chain/bsc-use-wallet'\r\nimport { Provider } from 'react-redux'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\r\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\r\nimport { BlockContextProvider } from 'contexts/BlockContext'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport store from 'state'\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  const rpcUrl = getRpcUrl()\r\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID)\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeContextProvider>\r\n        <LanguageContextProvider>\r\n          <bsc.UseWalletProvider\r\n            chainId={chainId}\r\n            connectors={{\r\n              walletconnect: { rpcUrl },\r\n              bsc,\r\n            }}\r\n          >\r\n            <BlockContextProvider>\r\n              <RefreshContextProvider>\r\n                <ModalProvider>{children}</ModalProvider>\r\n              </RefreshContextProvider>\r\n            </BlockContextProvider>\r\n          </bsc.UseWalletProvider>\r\n        </LanguageContextProvider>\r\n      </ThemeContextProvider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <App />\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","import React, { createContext } from 'react'\r\n\r\nexport interface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { PriceApiResponse, PriceState } from 'state/types'\r\n\r\nconst initialState: PriceState = {\r\n  isLoading: false,\r\n  lastUpdated: null,\r\n  data: null,\r\n}\r\n\r\n// Thunks\r\nexport const fetchPrices = createAsyncThunk<PriceApiResponse>('prices/fetch', async () => {\r\n  const response = await fetch('https://api.pancakeswap.com/api/v1/price')\r\n  const data = (await response.json()) as PriceApiResponse\r\n\r\n  // Return normalized token names\r\n  return {\r\n    update_at: data.update_at,\r\n    prices: Object.keys(data.prices).reduce((accum, token) => {\r\n      return {\r\n        ...accum,\r\n        [token.toLowerCase()]: data.prices[token],\r\n      }\r\n    }, {}),\r\n  }\r\n})\r\n\r\nexport const pricesSlice = createSlice({\r\n  name: 'prices',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPrices.pending, (state) => {\r\n      state.isLoading = true\r\n    })\r\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiResponse>) => {\r\n      state.isLoading = false\r\n      state.lastUpdated = action.payload.update_at\r\n      state.data = action.payload.prices\r\n    })\r\n  },\r\n})\r\n\r\nexport default pricesSlice.reducer","import BigNumber from 'bignumber.js'\r\nimport { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport { fetchFarmsPublicDataAsync, fetchPoolsUserDataAsync, fetchPoolsPublicDataAsync, setBlock } from './actions'\r\nimport { State, Farm, Pool, Block, PriceState } from './types'\r\nimport { QuoteToken } from '../config/constants/types'\r\nimport { fetchPrices } from './prices'\r\n\r\nconst ZERO = new BigNumber(0)\r\n\r\nexport const useFetchPublicData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n    dispatch(fetchPoolsPublicDataAsync())\r\n  }, [dispatch, slowRefresh])\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3NoAccount()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      dispatch(setBlock(blockNumber))\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [dispatch])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n  \r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n// Pools\r\n\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const usePoolFromPid = (sousId): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return pool\r\n}\r\n\r\n// Prices\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const pid = 3 // BNB-BUSD LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const pid = 0 // WIKI-BUSD LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePricesWIKIBusd = (): BigNumber => {\r\n  const pid = 25 // sWIKI-BUSD LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const useTotalValue = (): BigNumber => {\r\n  const farms = useFarms()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const sWIKIPrice = usePricesWIKIBusd()\r\n  let value = new BigNumber(0)\r\n  for (let i = 0; i < farms.length; i++) {\r\n    const farm = farms[i]\r\n    if (farm.lpTotalInQuoteToken) {\r\n      let val\r\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\r\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n        val = cakePrice.times(farm.lpTotalInQuoteToken)\r\n\r\n      } else {\r\n        val = farm.lpTotalInQuoteToken\r\n      }\r\n      value = value.plus(val)\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\n// Prices\r\nexport const useFetchPriceList = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPrices())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\nexport const useGetApiPrices = () => {\r\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\r\n  return prices\r\n}\r\n\r\nexport const useGetApiPrice = (token: string) => {\r\n  const prices = useGetApiPrices()\r\n  let tokenSymbol = token.toLowerCase()\r\n\r\n  if (!prices) {\r\n    return null\r\n  }\r\n\r\n  if (tokenSymbol === 'bnb') tokenSymbol = 'wbnb'\r\n  if (tokenSymbol === 'btc') tokenSymbol = 'btcb'\r\n\r\n  return prices[tokenSymbol]\r\n}\r\n\r\n// Block\r\nexport const useBlock = (): Block => {\r\n  return useSelector((state: State) => state.block)\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\nimport { Block } from '../types'\r\n\r\nconst initialState: Block = { blockNumber: 0 }\r\n\r\nexport const blockSlice = createSlice({\r\n  name: 'Block',\r\n  initialState,\r\n  reducers: {\r\n    setBlock: (_, action) => ({ blockNumber: action.payload }),\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setBlock } = blockSlice.actions\r\n\r\nexport default blockSlice.reducer"],"sourceRoot":""}